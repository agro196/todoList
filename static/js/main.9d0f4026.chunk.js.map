{"version":3,"sources":["reducers/index.js","store.js","services/item-service.js","components/item-service-context/item-service-context.js","components/app-header/index.js","components/app-header/app-header.js","components/todo-list-item/todo-list-item.js","utils/compose.js","utils/filter.js","utils/search.js","components/hoc/with-item-service.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","actions/index.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/item-status-filter.js","components/item-status-filter/index.js","components/item-add-form/item-add-form.js","components/item-add-form/index.js","components/app/index.js","components/app/app.js","components/error-boundry/error-boundry.js","components/error-boundry/index.js","index.js"],"names":["toggleProperty","arr","id","propName","idx","findIndex","item","value","slice","initialState","items","loading","error","filter","search","store","createStore","state","action","type","payload","newItem","length","label","important","done","itemId","itemIdx","applyMiddleware","thunk","ItemService","data","Promise","resolve","reject","setTimeout","Math","random","Error","React","createContext","ItemServiceProvider","Provider","ItemServiceConsumer","Consumer","AppHeader","connect","doneCount","toDoCount","className","TodoListItem","onToggleImportant","onToggleDone","onDelete","classNames","onClick","compose","funcs","comp","reduceRight","wrapped","f","filterItems","searchItems","toLowerCase","indexOf","withItemService","Wrapped","props","itemService","Spinner","ErrorIndicator","ItemRemovedFromList","ItemSetDone","ItemSetImportant","filterChanged","buttonName","SearchChanged","term","fetchItems","dispatch","getItems","then","catch","err","TodoList","bindActionCreators","useEffect","visibleItems","map","itemProps","SearchPanel","undefined","onSearchChange","placeholder","onChange","e","target","filterButtons","name","ItemStatusFilter","onFilterChange","buttons","mapDispatchToProps","onItemAdded","ItemAddForm","useState","setLabel","onSubmit","preventDefault","required","App","ErrorBoundry","hasError","this","setState","children","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d0f4026.chunk.js","sourcesContent":["const toggleProperty = (arr, id, propName) => {\r\n  const idx = arr.findIndex((item) => item.id === id);\r\n  const oldItem = arr[idx];\r\n  const value = !oldItem[propName];\r\n\r\n  const item = { ...arr[idx], [propName]: value };\r\n  return [...arr.slice(0, idx), item, ...arr.slice(idx + 1)];\r\n};\r\n\r\nconst initialState = {\r\n  items: [],\r\n  loading: true,\r\n  error: null,\r\n  filter: \"all\",\r\n  search: \"\",\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  const { items } = state;\r\n\r\n  switch (action.type) {\r\n    case \"FETCH_ITEMS_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case \"FETCH_ITEMS_FAILURE\":\r\n      return {\r\n        ...state,\r\n        items: [],\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case \"ITEM_ADDED_TO_LIST\":\r\n      const newItem = {\r\n        id: items.length + 1,\r\n        label: action.payload,\r\n        important: false,\r\n        done: false,\r\n      };\r\n      return {\r\n        ...state,\r\n        items: [...state.items, newItem],\r\n      };\r\n\r\n    case \"ITEM_REMOVED_FROM_LIST\":\r\n      const itemId = action.payload;\r\n      const itemIdx = items.findIndex((item) => item.id === itemId);\r\n\r\n      return {\r\n        ...state,\r\n        items: [...items.slice(0, itemIdx), ...items.slice(itemIdx + 1)],\r\n      };\r\n\r\n    case \"ITEM_SET_DONE\":\r\n      return {\r\n        ...state,\r\n        items: toggleProperty(items, action.payload, \"done\"),\r\n      };\r\n\r\n    case \"ITEM_SET_IMPORTANT\":\r\n      return {\r\n        ...state,\r\n        items: toggleProperty(items, action.payload, \"important\"),\r\n      };\r\n\r\n    case \"FILTER_CHANGED\":\r\n      return {\r\n        ...state,\r\n        filter: action.payload,\r\n      };\r\n\r\n    case \"SEARCH_CHANGED\":\r\n      return {\r\n        ...state,\r\n        search: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer } from \"./reducers\";\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));\r\n","export default class ItemService {\r\n  data = [\r\n    { id: 1, label: \"Drink Coffee\", important: false, done: false },\r\n    { id: 2, label: \"Read book\", important: true, done: false },\r\n    { id: 3, label: \"Watch TV\", important: false, done: false },\r\n  ];\r\n\r\n  getItems() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (Math.random() > 0.75) {\r\n          reject(new Error(\"Something bad happened\"));\r\n        } else {\r\n          resolve(this.data);\r\n        }\r\n      }, 700);\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst { Provider: ItemServiceProvider, Consumer: ItemServiceConsumer } =\r\n  React.createContext();\r\n\r\nexport { ItemServiceProvider, ItemServiceConsumer };\r\n","import AppHeader from './app-header';\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./app-header.css\";\r\n\r\nconst AppHeader = ({ items }) => {\r\n  const doneCount = items.filter((item) => item.done).length;\r\n  const toDoCount = items.length - doneCount;\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>\r\n        {toDoCount} more to do, {doneCount} done\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ items }) => {\r\n  return { items };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AppHeader);\r\n","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({ important, done,\r\n      label, onToggleImportant, onToggleDone, onDelete }) => {\r\n\r\n  let classNames = 'todo-list-item';\r\n  if (important) {\r\n    classNames += ' important';\r\n  }\r\n\r\n  if (done) {\r\n    classNames += ' done';\r\n  }\r\n\r\n\r\n  return (\r\n    <span className={classNames}>\r\n      <span\r\n        className=\"todo-list-item-label\"\r\n        onClick={onToggleDone}>{label}</span>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-success btn-sm float-right\"\r\n              onClick={onToggleImportant}>\r\n        <i className=\"fa fa-exclamation\"></i>\r\n      </button>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm float-right\"\r\n              onClick={onDelete}>\r\n        <i className=\"fa fa-trash-o\"></i>\r\n      </button>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","const compose = (...funcs) => (comp) => {\r\n  return funcs.reduceRight(\r\n    (wrapped, f) => f(wrapped), comp);\r\n};\r\n\r\nexport default compose;\r\n","const filterItems = (items, filter) => {\r\n  switch (filter) {\r\n    case \"all\":\r\n      return items;\r\n    case \"active\":\r\n      return items.filter((item) => !item.done);\r\n    case \"done\":\r\n      return items.filter((item) => item.done);\r\n    default:\r\n      return items;\r\n  }\r\n};\r\n\r\nexport default filterItems;\r\n","const searchItems = (items, search) => {\r\n  if (search.length === 0) {\r\n    return items;\r\n  }\r\n\r\n  return items.filter((item) => {\r\n    return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n  });\r\n};\r\n\r\nexport default searchItems;\r\n","import React from \"react\";\r\nimport { ItemServiceConsumer } from \"../item-service-context\";\r\n\r\nconst withItemService = () => (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <ItemServiceConsumer>\r\n        {(itemService) => {\r\n          return <Wrapped {...props} itemService={itemService} />;\r\n        }}\r\n      </ItemServiceConsumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withItemService;\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-css\">\r\n      <div className=\"lds-double-ring\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;\r\n","import React from \"react\";\r\nimport \"./error-indicator.css\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div>Error! Please refresh the page until the data is loaded:)</div>;\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","const itemsLoaded = (newItems) => {\r\n  return {\r\n    type: \"FETCH_ITEMS_SUCCESS\",\r\n    payload: newItems,\r\n  };\r\n};\r\n\r\nconst itemsError = (error) => {\r\n  return {\r\n    type: \"FETCH_ITEMS_FAILURE\",\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const itemAddedToList = (label) => {\r\n  return {\r\n    type: \"ITEM_ADDED_TO_LIST\",\r\n    payload: label,\r\n  };\r\n};\r\n\r\nexport const ItemRemovedFromList = (itemId) => {\r\n  return {\r\n    type: \"ITEM_REMOVED_FROM_LIST\",\r\n    payload: itemId,\r\n  };\r\n};\r\n\r\nexport const ItemSetDone = (itemId) => {\r\n  return {\r\n    type: \"ITEM_SET_DONE\",\r\n    payload: itemId,\r\n  };\r\n};\r\n\r\nexport const ItemSetImportant = (itemId) => {\r\n  return {\r\n    type: \"ITEM_SET_IMPORTANT\",\r\n    payload: itemId,\r\n  };\r\n};\r\n\r\nexport const filterChanged = (buttonName) => {\r\n  return {\r\n    type: \"FILTER_CHANGED\",\r\n    payload: buttonName,\r\n  };\r\n};\r\n\r\nexport const SearchChanged = (term) => {\r\n  return {\r\n    type: \"SEARCH_CHANGED\",\r\n    payload: term,\r\n  };\r\n};\r\n\r\nexport const fetchItems = (itemService) => () => (dispatch) => {\r\n  itemService\r\n    .getItems()\r\n    .then((data) => dispatch(itemsLoaded(data)))\r\n    .catch((err) => dispatch(itemsError(err)));\r\n};\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;\r\n","import React, { useEffect } from \"react\";\r\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\r\nimport \"./todo-list.css\";\r\nimport { compose } from \"../../utils\";\r\nimport { filterItems } from \"../../utils\";\r\nimport { searchItems } from \"../../utils\";\r\nimport { withItemService } from \"../hoc\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport {\r\n  fetchItems,\r\n  ItemRemovedFromList,\r\n  ItemSetDone,\r\n  ItemSetImportant,\r\n} from \"../../actions\";\r\n\r\nconst TodoList = ({\r\n  items,\r\n  filter,\r\n  search,\r\n  loading,\r\n  error,\r\n  onToggleImportant,\r\n  onToggleDone,\r\n  onDelete,\r\n  fetchItems,\r\n}) => {\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, [fetchItems]);\r\n\r\n  const visibleItems = searchItems(filterItems(items, filter), search);\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (error) {\r\n    return <ErrorIndicator />;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"todo-list list-group\">\r\n      {visibleItems.map((item) => {\r\n        const { id, ...itemProps } = item;\r\n        return (\r\n          <li key={id} className=\"list-group-item\">\r\n            <TodoListItem\r\n              {...itemProps}\r\n              onToggleImportant={() => onToggleImportant(id)}\r\n              onToggleDone={() => onToggleDone(id)}\r\n              onDelete={() => onDelete(id)}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ items, filter, search, loading, error }) => {\r\n  return { items, filter, search, loading, error };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { itemService }) => {\r\n  return bindActionCreators(\r\n    {\r\n      fetchItems: fetchItems(itemService),\r\n      onDelete: ItemRemovedFromList,\r\n      onToggleDone: ItemSetDone,\r\n      onToggleImportant: ItemSetImportant,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  withItemService(),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(TodoList);\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { SearchChanged } from \"../../actions\";\r\n\r\nimport \"./search-panel.css\";\r\n\r\nconst SearchPanel = ({ onSearchChange = () => {} }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control search-input\"\r\n      placeholder=\"type to search\"\r\n      onChange={(e) => onSearchChange(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      onSearchChange: SearchChanged,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(undefined, mapDispatchToProps)(SearchPanel);\r\n","import React from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { filterChanged } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst filterButtons = [\r\n  { name: \"all\", label: \"All\" },\r\n  { name: \"active\", label: \"Active\" },\r\n  { name: \"done\", label: \"Done\" },\r\n];\r\n\r\nconst ItemStatusFilter = ({ filter, onFilterChange = () => {} }) => {\r\n  const buttons = filterButtons.map(({ name, label }) => {\r\n    const isActive = name === filter;\r\n    const classNames =\r\n      \"btn \" + (isActive ? \"btn-info\" : \"btn-outline-secondary\");\r\n\r\n    return (\r\n      <button\r\n        key={name}\r\n        type=\"button\"\r\n        onClick={() => onFilterChange(name)}\r\n        className={classNames}\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  });\r\n\r\n  return <div className=\"btn-group\">{buttons}</div>;\r\n};\r\n\r\nconst mapStateToProps = ({ filter }) => {\r\n  return { filter };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      onFilterChange: filterChanged,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemStatusFilter);\r\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { itemAddedToList } from \"../../actions\";\r\n\r\nimport \"./item-add-form.css\";\r\n\r\nconst ItemAddForm = ({ onItemAdded }) => {\r\n  const [label, setLabel] = useState(\"\");\r\n\r\n  const onLabelChange = (e) => {\r\n    setLabel(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLabel(\"\");\r\n    onItemAdded && onItemAdded(label);\r\n  };\r\n\r\n  return (\r\n    <form className=\"bottom-panel d-flex\" onSubmit={onSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control new-todo-label\"\r\n        value={label}\r\n        onChange={onLabelChange}\r\n        placeholder=\"What needs to be done?\"\r\n        required\r\n      />\r\n\r\n      <button type=\"submit\" className=\"btn btn-outline-secondary\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onItemAdded: itemAddedToList,\r\n};\r\n\r\nexport default connect(undefined, mapDispatchToProps)(ItemAddForm);\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport TodoList from \"../todo-list\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport ItemAddForm from \"../item-add-form\";\r\n\r\nimport \"./app.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <AppHeader />\r\n      <div className=\"search-panel d-flex\">\r\n        <SearchPanel />\r\n        <ItemStatusFilter />\r\n      </div>\r\n      <TodoList />\r\n      <ItemAddForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\nimport ItemService from \"./services/item-service\";\r\nimport { ItemServiceProvider } from \"./components/item-service-context\";\r\nimport App from \"./components/app\";\r\nimport ErrorBoundry from \"./components/error-boundry\";\r\n\r\nconst itemService = new ItemService();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ErrorBoundry>\r\n      <ItemServiceProvider value={itemService}>\r\n        <App />\r\n      </ItemServiceProvider>\r\n    </ErrorBoundry>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}